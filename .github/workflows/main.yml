name: Auto-Build

on:
  push:
    tags: 
      - "v*.*.*"  # 语义化版本触发
  workflow_dispatch:
    inputs:
      platform:
        description: 'Build platform (all/win/linux/mac)'
        required: false
        default: 'all'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-2022
            arch: x64
            suffix: .exe
            build_cmd: |
              pyinstaller --onefile --icon=assets/github.ico ^
                --hidden-import=concurrent.futures ^
                --uac-admin --add-data="config/*.json;config/" ^
                --version-file=version_info.txt ^
                src/GitHubAccelerator.py -n GitHubAccelerator.exe
          
          - os: ubuntu-22.04
            arch: x64
            suffix: ''
            build_cmd: |
              sudo apt-get install -y patchelf
              pyinstaller --onefile \
                --add-data="config/*.json:config" \
                --hidden-import=concurrent.futures \
                --clean \
                src/GitHubAccelerator.py -n GitHubAccelerator
              strip dist/GitHubAccelerator
          
          - os: macos-13
            arch: arm64
            suffix: .app
            build_cmd: |
              brew install upx
              pyinstaller --onefile \
                --add-data="config/*.json:config" \
                --runtime-hook=scripts/mac_sign_hook.py \
                --hidden-import=concurrent.futures \
                src/GitHubAccelerator.py -n GitHubAccelerator.app
              codesign --deep --force --verify --verbose --sign "Apple Distribution" dist/GitHubAccelerator.app

    steps:
    - uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        architecture: ${{ matrix.arch }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        pip install pyinstaller==5.13.0

    - name: Build Executable
      shell: cmd
      run: ${{ matrix.build_cmd }}

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: GitHubAccelerator-${{ matrix.os }}-${{ github.run_number }}
        path: |
          dist/*
          !*.log
        retention-days: 3
        compression-level: 9

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Download All Artifacts
      uses: actions/download-artifact@v4
      with:
        pattern: GitHubAccelerator-*
        merge-multiple: true

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: "Release ${{ github.ref_name }}"
        body: |
          ![Build Status](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/badge.svg)
          **Build Info:**
          - Run ID: `${{ github.run_id }}`
          - Commit: [${{ github.sha }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})
        files: |
          GitHubAccelerator-windows-2022-*.exe
          GitHubAccelerator-ubuntu-22.04-*
          GitHubAccelerator-macos-13-*.app
        draft: false
        prerelease: ${{ contains(github.ref, 'beta') }}
