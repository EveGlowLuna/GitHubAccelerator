name: Multi-Platform Build

on:
  push:
    tags:
      - 'v*'  # 触发条件：新建版本标签时
  workflow_dispatch:  # 允许手动触发

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build Executable
      run: |
        pyinstaller --onefile --icon=github-mark.png `
          --hidden-import=concurrent.futures `
          --uac-admin --add-data="*.json;." `
          --version-file=version_info.txt `
          GitHubAccelerator.py -n GitHubAccelerator.exe
    
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: GitHubAccelerator-Windows
        path: dist/GitHubAccelerator.exe

  build-linux:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    
    - name: Install Requirements
      run: |
        sudo apt-get update
        sudo apt-get install -y libssl-dev
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build Linux Binary
      run: |
        pyinstaller --onefile \
          --add-data="*.json:." \
          --hidden-import=concurrent.futures \
          --clean \
          GitHubAccelerator.py -n GitHubAccelerator
    
    - name: Strip Binary
      run: strip dist/GitHubAccelerator
    
    - uses: actions/upload-artifact@v3
      with:
        name: GitHubAccelerator-Linux
        path: dist/GitHubAccelerator

  build-macos:
    runs-on: macos-12
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    
    - name: Install Dependencies
      run: |
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build macOS App
      run: |
        pyinstaller --onefile \
          --add-data="*.json:." \
          --runtime-hook=hooks/hook-mac_signature.py \
          --hidden-import=concurrent.futures \
          GitHubAccelerator.py -n GitHubAccelerator.app
    
    - uses: actions/upload-artifact@v3
      with:
        name: GitHubAccelerator-macOS
        path: dist/GitHubAccelerator.app

  create-release:
    needs: [build-windows, build-linux, build-macos]
    runs-on: ubuntu-latest
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v3
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: "Auto-generated build for ${{ github.ref_name }}"
        files: |
          GitHubAccelerator-Windows/GitHubAccelerator.exe
          GitHubAccelerator-Linux/GitHubAccelerator
          GitHubAccelerator-macOS/GitHubAccelerator.app
